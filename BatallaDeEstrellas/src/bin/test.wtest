import personajes.*
import equipos.*

describe"Personajes con energia inicial,Pamela y Tulipan en equipo
 laCasaDeLaFlor y pocardo y toro en equipo danceBull"{

test "lucha mano a mano Tulipan y Toro(ida y vuelta), Tulipan queda
con 7600 de energia y Toro con 3900(la mitad)"{
	
	tulipan.luchar(toro)
	toro.luchar(tulipan)
	
	assert.that(tulipan.energia()==7600 && toro.energia()==3900)
	
}
test "lucha mano a mano Pamela y Pocardo(ida y vuelta), Pamela queda
con 6400 de energia y Pocardo con 6100"{
	
	pamela.luchar(pocardo)
	pocardo.luchar(pamela)
	
	assert.that(pamela.energia()==6400 && pocardo.energia()==6100)
	
}
test "lucha Toro con Tulipan 3 veces y Toro queda con manguera y
maceta en su cofre"{
	
	toro.luchar(tulipan)
	toro.luchar(tulipan)
	toro.luchar(tulipan)
	
	assert.that(toro.cofre()==["manguera","maceta"])
	
}
test "lucha Toro con Tulipan 4 veces y Toro queda con manguera,
maceta y rastrillo en su cofre, Tulipan queda vacio"{
	
	toro.luchar(tulipan)
	toro.luchar(tulipan)
	toro.luchar(tulipan)
	toro.luchar(tulipan)
	
	assert.that(toro.cofre()==["manguera","maceta","rastrillo"] && tulipan.cofre()==[])
	
	}
	

test "Combaten laCasaDeLaFlor y danceBull, gana laCasaDeLaFlor" {

	assert.that(combate.batalla(laCasaDeLaFlor,danceBull)==["Aca pas√≥ la Pamela", "Hora de cuidar a las plantas"])

}

}

describe"Pamela y Pocardo (ambos con 10000 de energia inicial)en equipo 
laCasaDeLaFlor y Tulipan y toro en equipo danceBull"{
	
 fixture{
 	pamela.energia(10000)
 	pocardo.energia(10000)
 	laCasaDeLaFlor.eliminarPersonaje(tulipan)
 	laCasaDeLaFlor.agregarPersonaje(pocardo)
 	danceBull.eliminarPersonaje(pocardo)
 	danceBull.agregarPersonaje(tulipan)
 }
 test "Combaten laCasaDeLaFlor y danceBull, gana laCasaDeLaFlor, gana danceBull"{
 	assert.that(combate.batalla(laCasaDeLaFlor,danceBull)==["No se metan con el toro", "Hora de cuidar a las plantas"])
 }
 }
 
 